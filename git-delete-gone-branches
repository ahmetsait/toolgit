#!/usr/bin/env bash

app_name="$(basename "${BASH_SOURCE[0]}")"

USAGE=$(expand -t 4 << EOF
Usage:
	$app_name
		Delete local branches that no longer exist on remote.

Options:
	-?, --help
		Show this help information and exit.
EOF
)

while [[ $# -gt 0 ]]; do
	case "$1" in
		-\?|--help)
			echo "$USAGE"
			exit 0
			;;
		-*)
			echo "Unknown option: $1" >&2
			exit 1
			;;
		*)
			echo "Unexpected argument: $1" >&2
			exit 1
			;;
	esac
done

git in-repo || exit $?

if ! git is-worktree-clean; then
	echo "Error: Working tree has changes." >&2 &&
	exit 1
fi

git fetch --all --prune &&

current_branch="$(git rev-parse --abbrev-ref HEAD)" &&
main_branch="$(git main-branch --quiet)" &&

for branch in $(git for-each-ref --format '%(refname) %(upstream:track)' refs/heads | awk '$2 == "[gone]" {sub("refs/heads/", "", $1); print $1}'); do
	if [[ $branch == $current_branch ]]; then
		if [[ $branch != $main_branch ]]; then
			git switch "$main_branch" &&
			git branch -D "$branch"
		else
			echo "Cannot delete main branch '$main_branch'." >&2
		fi
	else
		git branch -D "$branch"
	fi
done
